# 0.12.48
---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      garden.io/generated: "true"
      garden.io/manifest-hash: c8e566c8d3af96d3b5103e9559719045329f8a8fab73fff1dbd20a4f7f4a7518
      garden.io/version: v-cc30670b1e
    creationTimestamp: "2023-05-26T12:59:42Z"
    generateName: mysql-967df6654-
    labels:
      module: mysql
      pod-template-hash: 967df6654
      service: mysql
    name: mysql-967df6654-kjq9j
    namespace: localhost-demo
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: mysql-967df6654
      uid: 20360e98-1c5c-4456-915f-f2608af73b3e
    resourceVersion: "1293635"
    uid: 968869fa-37df-45bd-9b5c-001768473e79
  spec:
    containers:
    - env:
      - name: GARDEN_VERSION
        value: v-cc30670b1e
      - name: GARDEN_MODULE_VERSION
        value: v-b8ece8345c
      - name: MYSQL_ROOT_PASSWORD
        value: password
      - name: MYSQL_USER
        value: demo
      - name: MYSQL_PASSWORD
        value: password
      - name: TZ
        value: America/New_York
      - name: POD_HOST_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: POD_UID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.uid
      image: mysql:8-debian
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - mysql
          - -u
          - root
          - --password=password
          - -e
          - SELECT 1
        failureThreshold: 3
        initialDelaySeconds: 90
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      name: mysql
      ports:
      - containerPort: 3306
        name: mysql
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - mysql
          - -u
          - root
          - --password=password
          - -e
          - SELECT 1
        failureThreshold: 90
        initialDelaySeconds: 2
        periodSeconds: 1
        successThreshold: 2
        timeoutSeconds: 3
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 10m
          memory: 90Mi
      securityContext:
        allowPrivilegeEscalation: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/mysql
        name: mysql-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kwkbv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 5
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: mysql-volume
    - name: kube-api-access-kwkbv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2023-05-26T12:59:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2023-05-26T12:59:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2023-05-26T12:59:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2023-05-26T12:59:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://135754aa241067b5929e661a79a59e4d9fc7d3a0599b2c0d2d705cf7d0b6257e
      image: mysql:8-debian
      imageID: docker-pullable://docker.dev.demo.com/base/percona-server@sha256:5d7032b86c20d9aecc34a79d10247eec05cd3468fd50a2cfa0340b759e4ae729
      lastState: {}
      name: mysql
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2023-05-26T12:59:43Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 10.1.15.136
    podIPs:
    - ip: 10.1.15.136
    qosClass: Burstable
    startTime: "2023-05-26T12:59:42Z"
kind: List
metadata:
  resourceVersion: ""
